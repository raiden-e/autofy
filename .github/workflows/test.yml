# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Sync Time
        run: |
          sudo apt-get install ntpdate
          NEEDS_SYNC=1
          while [ "$NEEDS_SYNC" -ne "0" ]; do
              sudo ntpdate -t 4     0.ca.pool.ntp.org
              NEEDS_SYNC=$?    # If this variable is set ot 0, time sync worked
              sleep 2
          done
          date +%H:%M:%S

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Write config.py
        run: |
          if [ -f config.py ]; then rm -f "config.py"; fi
          echo "TELEID      =\"${{ secrets.TELEID }}\""       >>config.py
          echo "TELEHASH    =\"${{ secrets.TELEHASH }}\""     >>config.py
          echo "TELEST      =\"${{ secrets.TELEST }}\""       >>config.py
          echo "SPOTIPYID   =\"${{ secrets.SPOTIPYID }}\""    >>config.py
          echo "SPOTIPYHS   =\"${{ secrets.SPOTIPYHS }}\""    >>config.py
          echo "SPOTIPYRU   =\"${{ secrets.SPOTIPYRU }}\""    >>config.py
          echo "SPOTIPYSC   =\"${{ secrets.SPOTIPYSC }}\""    >>config.py
          echo "SPOTIPYUN   =\"${{ secrets.SPOTIPYUN }}\""    >>config.py
          echo "SPOTIPYTG   =\"${{ secrets.SPOTIPYTG }}\""    >>config.py
          echo "SPOTIPYSP   =\"${{ secrets.SPOTIPYSP }}\""    >>config.py
          echo "SPOTIPYCACHE='${{ secrets.SPOTIPYCACHE }}'"   >>config.py
          echo "GISTTOKEN   =\"${{ secrets.GISTTOKEN }}\""    >>config.py
          echo "GISTID      =\"${{ secrets.GISTID }}\""       >>config.py
          echo "DCTOKEN     =\"${{ secrets.DCTOKEN }}\""      >>config.py
          echo "DCGUILD     =\"${{ secrets.DCGUILD }}\""      >>config.py

          echo Wrote TELEID, TELEHASH, TELEST, GISTTOKEN, GISTID, DCTOKEN, DCGUILD
          echo SPOTIPYUN, SPOTIPYTG, SPOTIPYSP, SPOTIPYID, SPOTIPYHS, SPOTIPYRU, SPOTIPYSC, SPOTIPYCACHE

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run unit tests
        run: |
          python -m unittest discover -v tests

      - name: Cleanup
        run: if [ -f config.py ]; then rm -f "config.py"; fi
        if: always()
