# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Sync Time
        run: |
          sudo apt-get install ntpdate
          NEEDS_SYNC=1
          while [ "$NEEDS_SYNC" -ne "0" ]; do
              sudo ntpdate -t 4     0.ca.pool.ntp.org
              NEEDS_SYNC=$?    # If this variable is set ot 0, time sync worked
              sleep 2
          done
          date +%H:%M:%S

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Write config.py
        run: |
          if [ -f config.py ]; then rm -f "config.py"; fi

          echo "TELEID      =\"${{ secrets.TELEID }}\""       >>config.py
          echo "TELEHASH    =\"${{ secrets.TELEHASH }}\""     >>config.py
          echo "TELEST      =\"${{ secrets.TELEST }}\""       >>config.py
          echo "SPOTIPYID   =\"${{ secrets.SPOTIPYID }}\""    >>config.py
          echo "SPOTIPYHS   =\"${{ secrets.SPOTIPYHS }}\""    >>config.py
          echo "SPOTIPYRU   =\"${{ secrets.SPOTIPYRU }}\""    >>config.py
          echo "SPOTIPYSC   =\"${{ secrets.SPOTIPYSC }}\""    >>config.py
          echo "SPOTIPYUN   =\"${{ secrets.SPOTIPYUN }}\""    >>config.py
          echo "SPOTIPYTG   =\"${{ secrets.SPOTIPYTG }}\""    >>config.py
          echo "SPOTIPYSP   =\"${{ secrets.SPOTIPYSP }}\""    >>config.py
          echo "SPOTIPYCACHE='${{ secrets.SPOTIPYCACHE }}'"   >>config.py
          echo "GISTTOKEN   =\"${{ secrets.GISTTOKEN }}\""    >>config.py
          echo "GISTID      =\"${{ secrets.GISTID }}\""       >>config.py
          echo "NEWS_URL    =\"${{ secrets.NEWS_URL }}\""     >>config.py
          echo "ERROR_URL   =\"${{ secrets.ERROR_URL }}\""    >>config.py

          echo Wrote TELEID, TELEHASH, TELEST, GISTTOKEN, GISTID, DCTOKEN, DCGUILD
          echo SPOTIPYUN, SPOTIPYTG, SPOTIPYSP, SPOTIPYID, SPOTIPYHS, SPOTIPYRU, SPOTIPYSC, SPOTIPYCACHE

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run unit tests
        run: |
          python -m unittest discover -v tests

      - name: Cleanup
        run: if [ -f config.py ]; then rm -f "config.py"; fi
        if: always()


  analyze:
  # For most projects, this workflow file will not need changing; you simply need
  # to commit it to your repository.
  #
  # You may wish to alter this file to override the set of languages analyzed,
  # or to provide custom queries or build logic.
  #
  # ******** NOTE ********
  # We have attempted to detect the languages in your repository. Please check
  # the `language` matrix defined below to confirm you have the correct set of
  # supported CodeQL languages.
  #
      name: Analyze
      runs-on: ubuntu-latest

      strategy:
        fail-fast: false
        matrix:
          language: [ 'python' ]
          # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]
          # Learn more:
          # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed

      steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
      # If this step fails, then you should remove it and run the build manually (see below)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1

      # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
      # üìö https://git.io/JvXDl

      # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      #- run: |
      #   make bootstrap
      #   make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  